# SPDX-License-Identifier: {{ cookiecutter.open_source_license }}
# FileType: CONFIG
# FileCopyrightText: {% now 'utc', '%Y' %}, {{ cookiecutter.full_name }} at GFZ Potsdam



before_script:
  - git lfs pull


stages:
  - test
  - deploy
  - cleanup


test_{{ cookiecutter.project_slug }}:
  stage: test
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  script:
    - source activate ci_env

    # install missing dependencies on the CI container
    - mamba env update --name ci_env --file tests/CI_docker/context/environment_{{ cookiecutter.project_slug }}.yml  --prune

    # run tests
    - make pytest

    # create the docs
    - make docs

  artifacts:
    expose_as: 'Test and coverage report'
    paths:
    - htmlcov/
    - report.html
    - docs/_build/html/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml
    expire_in: 30 days
    when: always


test_styles:
  stage: test
  script:
    - source activate ci_env
    # install missing dependencies in the CI container
    - mamba env update --name ci_env --file tests/CI_docker/context/environment_{{ cookiecutter.project_slug }}.yml  --prune
    # run style checks and save output to file while not blocking a commit if it fails 
    - make lint 
  artifacts:
    paths:
      {%- if cookiecutter.use_precommit == 'y' %}
      - tests/linting/pre-commit-output.txt
      {%- else %}
      - tests/linting/flake8.log
      - tests/linting/pycodestyle.log
      - tests/linting/pydocstyle.log
      {%- endif %} 
    when: always


test_urls:
  stage: test
  script:
    - source activate ci_env
    - make urlcheck
  when: always


test_{{ cookiecutter.project_slug }}_install:
  stage: test
  script:
    - source activate

    # update base environment
    - conda update -n base -c conda-forge --all

    # create {{ cookiecutter.project_slug }} environment from environment_{{ cookiecutter.project_slug }}.yml
    - mamba env create --name {{ cookiecutter.project_slug }}_testinstall -f tests/CI_docker/context/environment_{{ cookiecutter.project_slug }}.yml
    - conda activate {{ cookiecutter.project_slug }}_testinstall

    # run installer
    - pip install .

    # check if all dependencies are correctly installed
    - pip check

    # test if its importable
    - cd ..
    - ls
    - python -c "import {{ cookiecutter.project_slug }}; print({{ cookiecutter.project_slug }})"
  only:
    - main


pages:  # this job must be called 'pages' to advise GitLab to upload content to GitLab Pages
  stage: deploy
  dependencies:
    - test_{{ cookiecutter.project_slug }}
  script:
    # Create the public directory
    - rm -rf public
    - mkdir public
    - mkdir -p public/doc
    - mkdir -p public/images/
    - mkdir -p public/coverage
    - mkdir -p public/test_reports

    # Copy over the docs
    - cp -r docs/_build/html/* public/doc/
    # - cp -r docs/images/* public/images/  # we don't have images so far

    # Copy over the coverage reports
    - cp -r htmlcov/* public/coverage/

    # Copy over the test reports
    - cp report.html public/test_reports/

    # Check if everything is working great
    - ls -al public
    - ls -al public/doc
    - ls -al public/coverage
    - ls -al public/test_reports
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - main

# can be used for uploading tagged versions to PyPi, credits need to be set in the GitLab settings as environment
# variables before!

#deploy_pypi:
#  stage: deploy
#  dependencies:
#    - test_{{ cookiecutter.project_slug }}
#  script:
#    - source activate ci_env
#    - pip install -U twine build
#    - python -m build --sdist
#    - twine check dist/*
#    - twine upload dist/*  # requires creds as environment variables
#  only:
#    - /^v\d+\.\d+\.\d+([abc]\d*)?$/  # PEP-440 compliant version (tags)
#  except:
#    - dev

# This creates a new release on an associated GitHub repo when tagged.
# The sync of the code needs to happen over the settings in the GitLab!

#create_github_release:
#    stage: deploy
#    dependencies:
#       - test_{{ cookiecutter.project_slug }}
#    script:
#        - bash ./.github/create_release_from_gitlab_ci.sh  # uses environment variables set in the UI
#    only:
#        - /^v\d+\.\d+\.\d+([abc]\d*)?$/  # PEP-440 compliant version (tags)
#    except:
#        - dev
